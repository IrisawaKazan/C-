//=======================================
//
// エネミークラス[enemy.cpp]
// Irisawa Kazan
//
//=======================================
#include"enemy.h"

//----------------------------
// 敵クラスのコンストラクタ
//----------------------------
CEnemy::CEnemy()
{
	m_nLife = 0;
	m_nAttack = 0;
}

//----------------------------
// 敵クラスのデストラクタ
//----------------------------
CEnemy::~CEnemy()
{

}

//----------------------------
// 敵クラスの初期化処理
//----------------------------
void CEnemy::Init(void)
{
	m_nLife = 100;
	m_nAttack = 50;
}

//----------------------------
// 敵クラスの終了処理
//----------------------------
void CEnemy::Uinit(void)
{

}

//----------------------------
// 敵クラスの入力処理
//----------------------------
void CEnemy::Input(void)
{
	printf("体力を入力 > ");
	scanf("%d", &m_nLife);
	printf("攻撃力を入力 > ");
	scanf("%d", &m_nAttack);
}

//----------------------------
// 敵クラスの出力処理
//----------------------------
void CEnemy::Output(void)
{
	printf("体力: %d\n", m_nLife);
	printf("攻撃力: %d\n", m_nAttack);
}

//----------------------------
// 人型敵クラスのコンストラクタ
//----------------------------
CEnemyHuman::CEnemyHuman()
{
	m_SpeedWalk = 0;
}

//----------------------------
// 人型敵クラスのデストラクタ
//----------------------------
CEnemyHuman::~CEnemyHuman()
{

}

//----------------------------
// 人型敵クラスの初期化処理
//----------------------------
void CEnemyHuman::Init(void)
{
	//// private:ではアクセスできない
	//m_nLife = 100;
	//m_nAttack = 50;

	CEnemy::Init(); // 基本クラスのスコープを使用してメンバ関数を呼び出す(private:でアクセスできる)

	m_SpeedWalk = 30;
}

//----------------------------
// 人型敵クラスの終了処理
//----------------------------
void CEnemyHuman::Uinit(void)
{
	CEnemy::Uinit();
}

//----------------------------
// 人型敵クラスの入力処理
//----------------------------
void CEnemyHuman::Input(void)
{
	printf("< 人型敵 >\n");
	CEnemy::Input();

	printf("歩く速さを入力 > ");
	scanf("%d", &m_SpeedWalk);
}

//----------------------------
// 人型敵クラスの出力処理
//----------------------------
void CEnemyHuman::Output(void)
{
	printf("< 人型敵 >\n");
	CEnemy::Output();

	printf("歩く速さ: %d\n", m_SpeedWalk);
}

//----------------------------
// 鳥型敵クラスのコンストラクタ
//----------------------------
CEnemyBird::CEnemyBird()
{
	m_SpeedFly = 0;
}

//----------------------------
// 鳥型敵クラスのデストラクタ
//----------------------------
CEnemyBird::~CEnemyBird()
{

}

//----------------------------
// 鳥型敵クラスの初期化処理
//----------------------------
void CEnemyBird::Init(void)
{
	CEnemy::Init(); // 基本クラスのスコープを使用してメンバ関数を呼び出す

	m_SpeedFly = 30;
}

//----------------------------
// 鳥型敵クラスの終了処理
//----------------------------
void CEnemyBird::Uinit(void)
{
	CEnemy::Uinit();
}

//----------------------------
// 鳥型敵クラスの入力処理
//----------------------------
void CEnemyBird::Input(void)
{
	printf("< 鳥型敵 >\n");
	CEnemy::Input();

	printf("飛ぶ速さを入力 > ");
	scanf("%d", &m_SpeedFly);
}

//----------------------------
// 鳥型敵クラスの出力処理
//----------------------------
void CEnemyBird::Output(void)
{
	printf("< 鳥型敵 >\n");
	CEnemy::Output();

	printf("飛ぶ速さ: %d\n", m_SpeedFly);
}