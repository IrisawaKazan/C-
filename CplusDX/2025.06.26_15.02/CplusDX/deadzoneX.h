//==============================================================
//
// [deadzoneX.h]
// Author: Irisawa Kazan
//
//==============================================================
#ifndef _DEADZONEX_H_ // このマクロ定義がされてなかったら
#define _DEADZONEX_H_ // 2重インクルード防止のマクロ定義

#include"main.h"
#include"object.h"

// デッドゾーンXクラス
class CDeadzoneX : public CObject
{
public:
	CDeadzoneX(int nPriority = 3);
	~CDeadzoneX();

	static CDeadzoneX* Create(D3DXVECTOR3 pos);

	HRESULT Init(D3DXVECTOR3 pos);
	void Uninit(void);
	void Update(void);
	void Draw(void);

	void SetPosition(D3DXVECTOR3 pos);
	void SetRotation(D3DXVECTOR3 rot);

	D3DXVECTOR3 GetPos(void);
	D3DXVECTOR3 GetRot(void);

	void SetVtxMin(D3DXVECTOR3 vtxMin);
	void SetVtxMax(D3DXVECTOR3 vtxMax);
	D3DXVECTOR3 GetVtxMin(void);
	D3DXVECTOR3 GetVtxMax(void);

	static CDeadzoneX* Collision(void);

private:
	LPDIRECT3DTEXTURE9 m_pTexture;
	LPD3DXMESH m_pMesh;      // メッシュ(頂点座標)へのポインタ
	LPD3DXBUFFER m_pBuffMat; // マテリアルへのポインタ
	DWORD m_dwNumMat;        // マテリアルの数
	D3DXVECTOR3 m_pos;       // 位置
	D3DXVECTOR3 m_rot;       // 向き
	D3DXMATRIX m_mtxWorld;   // ワールドマトリックス

	D3DXVECTOR3 m_vtxMin; // モデルの最小値
	D3DXVECTOR3 m_vtxMax; // モデルの最大値

	float m_fRotation; // ローテーション
};

#endif